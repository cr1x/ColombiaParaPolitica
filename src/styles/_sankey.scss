// colors
@use 'colors' as color;

body {
  background: color.$bg;
}

@mixin para-scale($where) {
  @for $i from 0 through color.$topic-stops {
    &.para--#{($i * 20)} {
      #{$where}: mix(color.$para, color.$topic, $i * 20%);
    }
  }
}

@mixin ppColor($where) {

  @each $pp-name,
  $pp-color in color.$partidos {
    &--#{$pp-name} {
      #{$where}: $pp-color;
    }
  }
}

#dataviz {
  width: 100vw;
  height: 90vh;
  // border: 5px solid darken(color.$bg, 2%);
  background: color.$bg;
}

.link {
  opacity: .4;
  transition: opacity .2s linear;

  &.fixed2 {
    opacity: .7;
    transition: opacity .3s linear;
  }

  &.over {
    opacity: .9;
  }

  path {
    fill: none;
  }

  &.aut,
  &.proj {

    // &.con {
    //   @for $i from 1 through 2 {
    //     &--#{$i} {
    //       mask: url('#maskC' + $i);
    //     }
    //   }
    // }
    &.pp {
      @include ppColor(stroke);
    }

    &.para {
      stroke: color.$neutral;

      .para--100 {
        stroke: color.$para;
      }
    }
  }

  &.topic {
    &.para {
      path {
        @include para-scale(stroke);
      }
    }
  }
}

.node {
  pointer-events: bounding-box;
  cursor: pointer;
  stroke: none;

  .nRect {
    stroke: none;
    transition: fill .3s linear;

    .fixed & {
      fill: blue;
      transition: fill .5s ease;
    }

    .fixed2 & {
      fill: rgb(170, 135, 251);
      transition: fill 0.5s ease-out;
    }
  }

  &.autor {
    fill: color.$neutral;

    text {
      fill: scale-color(color.$neutral, $blackness: 90%);
    }

    &.para {
      .para--100 {
        fill: color.$para;
      }
    }
  }

  &.lapse {
    fill: color.$bg;

    &.para {
      .pp {
        @include ppColor(fill);
      }
    }
  }

  &.proj {
    fill: color.$bg;

    .pp {
      @include ppColor(fill);
    }

    &.para {
      text {
        @include para-scale(fill);
      }
    }
  }

  &.anno {
    &.para {
      rect {
        @include para-scale(fill);
      }

      text {
        fill: color.$bg
      }
    }
  }

  &.topic {
    &.para {

      rect,
      text {
        @include para-scale(fill);
      }
    }
  }
}

.fix {
  path {
    // stroke: scale-color(color.$bg, $lightness: -10%);
    stroke: color.$para;
    stroke-width: 1;
    stroke-opacity: 1;
  }
}

// .guide {
// stroke: black;
// stroke-opacity: 1;
// stroke-width: 0.5;
// mix-blend-mode: overlay;
// fill: none;
// }
.guide {
  stroke: color.$bg;
  stroke-opacity: .6;
  stroke-width: 1;
  fill: none;
}

#update {
  width: 10vw;
  padding: 20px;
  cursor: pointer;
  pointer-events: none;
  color: color.$bg;
}
