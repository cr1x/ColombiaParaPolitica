// colors
@use 'colors' as color;

// @function tint($color-end, $color-start, $percentage) {
//   @return mix($color-end, $color-start, $percentage);
// }

// @debug "partidos: #{length(color.$partidos)}";

body {
  background: color.$bg;
}

#dataviz {
  width: 100vw;
  height: 90vh;
  border: 5px solid darken(color.$bg, 2%);
  background: color.$bg;
}

.link {
  opacity: .4;
  transition: opacity .2s linear;

  &.fixed2 {
    opacity: .7;
    transition: opacity .3s linear;
  }

  &.over {
    opacity: .9;
  }

  path {
    fill: none;
  }

  &.aut,
  &.proy {
    // &.con {
    //   @for $i from 1 through 2 {
    //     &--#{$i} {
    //       mask: url('#maskC' + $i);
    //     }
    //   }
    // }

    //   &.con {
    //     &--1 {
    //       mask: url(#maskC1);
    //     }
    // 
    //     &--2 {
    //       mask: url(#maskC2);
    //     }
    //   }

    &.pp {
      @for $i from 1 through length(color.$partidos) {
        &--#{($i)} {
          stroke: nth(color.$partidos, $i);
        }
      }
    }

    &.para {
      stroke: color.$neutral;

      .para--100 {
        stroke: color.$para;
      }
    }
  }

  &.tema {
    &.para {
      path {
        &.para {
          @for $i from 0 through color.$tema-stops {
            &--#{($i * 20)} {
              stroke: mix(color.$para, color.$tema, $i * 20%);
            }
          }
        }
      }
    }
  }
}



.node {
  cursor: pointer;

  .nRect {
    fill: transparent;
    stroke: none; // #544d98;
    stroke-width: 1.5;
    stroke-opacity: .6;
    transition: fill .3s linear;

    .fixed & {
      fill: blue;
      transition: fill .5s ease;
    }

    .fixed2 & {
      fill: rgb(170, 135, 251);
      transition: fill 0.5s ease-out;
    }
  }

  &.autor {
    &.para {
      rect {
        stroke: none;
        fill: color.$neutral;
      }

      .para--100 {
        fill: color.$para;
      }
    }
  }

  &.periodo {
    &.para {
      rect {
        stroke: none;

        &.pp {
          @for $i from 1 through length(color.$partidos) {
            &--#{($i)} {
              fill: nth(color.$partidos, $i);
            }
          }
        }
      }
    }
  }

  &.tema {
    &.para {
      rect {
        stroke: none;
      }

      .para {
        @for $i from 0 through color.$tema-stops {
          &--#{($i * 20)} {
            fill: mix(color.$para, color.$tema, $i * 20%);
          }
        }
      }
    }
  }

}

.guide {
  stroke: color.$bg;
  stroke-opacity: .5;
  stroke-width: 1;
  fill: none;
}

#update {
  width: 10vw;
  padding: 20px;
  cursor: pointer;
  opacity: 0.3;
}
