// colors
@use 'colors' as color;

body {
  background: color.$bg;
}

@mixin para-scale($where) {
  @for $i from 0 through color.$topic-stops {
    &.para--#{($i * 20)} {
      #{$where}: mix(color.$para, color.$topic, $i * 20%);
    }
  }
}

@mixin ppColor($where) {

  @each $pp-name,
  $pp-color in color.$partidos {
    &--#{$pp-name} {
      #{$where}: $pp-color;
    }
  }
}

$sOptionsH: 60px;

#sOptions {
  width: 100vw;
  height: $sOptionsH;
  border-bottom: 1px solid darken(color.$bg, 10%);
}

#dataviz {
  width: 100vw;
  height: calc(100vh - $sOptionsH);
  background: color.$bg;
}

input {
  &[type=checkbox] {
    height: 0;
    width: 0;
    visibility: hidden;
  }
}

#sTooltip {
  z-index: 1000;
  opacity: 0;
  position: absolute;
  width: 220px;
  height: 0;
  pointer-events: none;
  transform: translate(-50%, 0);
  transition: opacity .2s ease-out;

  &--content {
    background: color.$toolTip;
    position: absolute;
    padding: 1rem 1.5rem 1rem 1.5rem;
    bottom: 100%;
    margin-bottom: 0.6rem;
    left: 50%;
    width: 100%;
    height: auto;
    overflow: hidden;
    border-radius: 2px;
    color: color.$bg;
    transform: translateX(calc(var(--mouse-x) * -1%));
  }

  &--mark {
    width: 1rem;
    height: 0.6rem;
    position: absolute;
    left: 50%;
    bottom: 100%;
    border-left: solid transparent 0.5rem;
    border-right: solid transparent 0.5rem;
    border-top: solid 0.6rem color.$toolTip;
    transform: translateX(calc(var(--mouse-x) * -1%));
  }
}

.project-ellipsis {
  display: -webkit-box;
  -webkit-line-clamp: 3;
  -webkit-box-orient: vertical;
  overflow: hidden;
  white-space: pre-wrap;
}

.link {
  opacity: .4;
  transition: opacity .2s linear;
  mix-blend-mode: multiply;

  &.fixed2 {
    opacity: .7;
    transition: opacity .3s linear;
  }

  &.over {
    opacity: .9;
  }

  path {
    fill: none;
  }

  &.aut,
  &.proj {

    // &.con {
    //   &--1 {
    //     stroke-dasharray: 4 1.5;
    //   }
    // }
    &.pp {
      @include ppColor(stroke);
    }

    &.para {
      stroke: color.$neutral;

      .para--100 {
        stroke: color.$para;
      }
    }
  }

  &.topic {
    &.para {
      path {
        @include para-scale(stroke);
      }
    }
  }
}

.node {
  pointer-events: bounding-box;
  cursor: pointer;
  stroke: none;

  .nRect {
    stroke: none;
    transition: fill .3s linear;

    .fixed & {
      fill: blue;
      transition: fill .5s ease;
    }

    .fixed2 & {
      fill: rgb(170, 135, 251);
      transition: fill 0.5s ease-out;
    }
  }

  &.autor {
    fill: color.$neutral;

    text {
      fill: scale-color(color.$neutral, $blackness: 90%);
    }

    .old {
      fill: color.$bg;

      &--2 {
        fill: scale-color(color.$neutral, $alpha: -85%);
        mix-blend-mode: multiply;
      }
    }

    &.para {
      .para--100 {
        fill: color.$para;
      }

      .old--2 {
        &.para--100 {
          fill: scale-color(color.$para, $alpha: -90%);
        }
      }
    }
  }

  &.lapse {
    fill: color.$bg;

    &.para {
      .pp {
        @include ppColor(fill);
      }
    }
  }

  &.proj {
    fill: color.$bg;

    .pp {
      @include ppColor(fill);
    }

    &.para {
      text {
        @include para-scale(fill);
      }
    }
  }

  &.anno {
    &.para {
      rect {
        @include para-scale(fill);
      }

      text {
        fill: color.$bg
      }
    }
  }

  &.topic {
    &.para {
      rect {
        @include para-scale(fill);
      }
    }

    text {
      fill: color.$bg;
    }
  }
}

.fix {
  stroke: scale-color(color.$bg, $lightness: -50%);
  stroke-width: 0.5;
  stroke-opacity: 1;
}

.guide {
  stroke: color.$bg;
  stroke-opacity: .6;
  stroke-width: 1;
  fill: none;
  pointer-events: none;
}

$switch-size: 1.2rem;
$switch-padd: $switch-size / 6; // 3px;
$switch-knob: calc($switch-size - $switch-padd * 2);

.switch {
  &--label {
    height: 100%;
    width: fit-content;
    padding: 0 10px;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    gap: 6px;
    user-select: none;
    cursor: pointer;
  }

  &--button {
    position: relative;
    cursor: pointer;
    margin: 0;
    padding: 0;
    display: inline-flex;
    align-items: center;
    height: $switch-size;
    width: $switch-size * 1.8;
    border-radius: 100px;
    background: color.$neutral;
    transition: background 320ms ease;

    &:after {
      content: "";
      position: absolute;
      left: $switch-padd;
      top: $switch-padd;
      display: block;
      pointer-events: none;
      height: $switch-knob;
      width: $switch-knob;
      background: color.$bg;
      border-radius: 100px;
      transition: left 320ms cubic-bezier(0.68, -0.55, 0.27, 01.55);
    }

    &[aria-checked="true"] {
      background: color.$para;

      &:after {
        left: calc(100% - ($switch-padd + $switch-knob));
      }
    }
  }
}
